using Flowdock.Client.Domain;
using Flowdock.Commands;
using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;
using MoqaLate.Autogenerated;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Flowdock.VSUnitTests.Commands {
	[TestClass]
	public class GoToFlowCommandTest {
		private Flow _flow;
		private NavigationManagerMoqaLate _navigationManager;
		private GoToFlowCommand _command;


		[TestInitialize]
		public void BeforeEach() {
			_flow = new Flow();
			_navigationManager = new NavigationManagerMoqaLate();
			_command = new GoToFlowCommand(_flow, _navigationManager);
		}

		[TestMethod]
		public void CanExecute_should_be_true() {
			Assert.IsTrue(_command.CanExecute(null));
		}

		[TestMethod]
		public void Execute_should_go_to_the_flow() {
			_command.Execute(null);

			Assert.AreEqual(1, _navigationManager.GoToFlowTimesCalled());
			Assert.AreEqual(_flow, _navigationManager.GoToFlowParameter_flow_LastCalledWith);
		}

	}
}
