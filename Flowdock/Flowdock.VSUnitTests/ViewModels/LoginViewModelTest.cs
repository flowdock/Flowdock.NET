using Flowdock.ViewModels;
using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;
using MoqaLate.Autogenerated;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Flowdock.VSUnitTests.ViewModels {
	[TestClass]
	public class LoginViewModelTest {

		private AppSettingsMoqaLate _appSettings;
		private LoginViewModel _viewModel;

		[TestInitialize]
		public void BeforeEach() {
			_appSettings = new AppSettingsMoqaLate();
			_viewModel = new LoginViewModel(new FlowdockContextMoqaLate(), _appSettings, new NavigationManagerMoqaLate());
		}

		[TestMethod]
		public void Username_should_set_on_settings() {
			string username = "hellokitty";
			_viewModel.Username = username;

			Assert.AreEqual(username, _appSettings.Username);
		}

		[TestMethod]
		public void Username_should_fire_property_changed() {
			string propertyName = null;
			_viewModel.PropertyChanged += (o, e) => propertyName = e.PropertyName;

			_viewModel.Username = "hellokitty";

			Assert.AreEqual("Username", propertyName);
		}

		[TestMethod]
		public void Password_should_set_on_settings() {
			string password = "mypassword";
			_viewModel.Password = password;

			Assert.AreEqual(password, _appSettings.Password);
		}

		[TestMethod]
		public void Password_should_fire_property_changed() {
			string propertyName = null;
			_viewModel.PropertyChanged += (o, e) => propertyName = e.PropertyName;

			_viewModel.Password = "mypassword";

			Assert.AreEqual("Password", propertyName);
		}
	}
}
